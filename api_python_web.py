# -*- coding: utf-8 -*-
"""Api_Python_web.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1K-iADUwu5d3hM-_BqP1vaihS2n7CoCYf
"""

import requests as r

url = 'https://api.covid19api.com/dayone/country/brazil'
resp= r.get(url)
resp.status_code

raw_data = resp.json()

raw_data[0]

final_data = []
for obs in raw_data:
    final_data.append([obs['Confirmed'], obs['Deaths'], obs['Recovered'], obs['Active'], obs['Date']])

final_data.insert(0, ['Confirmados', 'Obitos', 'Recuperados', 'Ativos', 'Data'])
final_data

Confirmados = 0
Obitos = 1
Recuperados = 2
Ativos = 3
Data = 4

for i in range(1, len(final_data)):
    final_data[i][Data] = final_data[i][Data][:10]

final_data

import datetime as dt

import csv

with open('brasil-covid.csv', 'w') as file:
    writer = csv.writer(file)
    writer.writerows(final_data)

for i in range(1, len(final_data)):
    final_data[i][Data] = dt.datetime.strptime(final_data[i][Data], '%Y-%m-%d')

final_data

def get_datasets(y, labels):
    if type(y[0]) == list:
        datasets = []
        for i in range(len(y)):
                datasets.append({
                    'label':labels[i],
                    'data': y[i]
                })
        return datasets
    else:
            return({
                'label': labels[0],
                'data': y
            })

def set_title(title = ''):
    if title != '':
        display = 'true'
    else:
        display = 'false'
    return {
        'title': title,
        'display': display
    }

def create_chart(x, y, labels, kind='bar', title=''):
    
    datasets = get_datasets(y, labels)
    options = set_title(title)
    
    chart = {
        'type': kind,
        'data':{
            'labels': x,
            'datasets': datasets
        },
        'options': options
    }
    return chart

def get_api_chart(chart):
    url_base = 'https://quickchart.io/chart'
    resp = r.get(f'{url_base}?c={str(chart)}')
    return resp.content

def save_image(path, content):
    with open(path, 'wb') as image:
        image.write(content)

#!pip install pillow

from PIL import Image
from IPython.display import display

def display_image(path):
    img_pil = Image.open(path)
    display(img_pil)

y_data_1 = []
for obs in final_data[1::10]:
    y_data_1.append(obs[Confirmados])

y_data_2 = []
for obs in final_data[1::10]:
    y_data_2.append(obs[Recuperados])
    
labels = ['Confirmados', 'Recuperados']

x= []
for obs in final_data[1::10]:
    x.append(obs[Data].strftime('%d/%m/%Y'))

chart = create_chart(x, [y_data_1, y_data_2], labels, title = 'Gr√°ficos Confirmados vs Recuperados')
chart_content = get_api_chart(chart)
save_image('meu-primeiro-grafico.png', chart_content)
display_image('meu-primeiro-grafico.png')

from urllib.parse import quote

def get_api_qrcode(link):
    text = quote(link) #parsing  do link para url
    url_base = 'https://quickchart.io/qr'
    resp = r.get(f'{url_base}?text={text}')
    return resp.content

url_base = 'https://quickchart.io/chart'
link = f'{url_base}?c={str(chart)}'
save_image('qr_code.png', get_api_qrcode(link))
display_image('qr_code.png')







